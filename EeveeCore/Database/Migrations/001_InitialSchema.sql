-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.achievements
(
    duel_party_wins integer DEFAULT 0,
    duel_single_wins integer DEFAULT 0,
    npc_wins integer DEFAULT 0,
    first_party_create boolean NOT NULL DEFAULT false,
    fishing_success integer DEFAULT 0,
    breed_hexa integer DEFAULT 0,
    breed_penta integer DEFAULT 0,
    breed_success integer DEFAULT 0,
    market_sold integer DEFAULT 0,
    pokemon_caught integer DEFAULT 0,
    shiny_caught integer DEFAULT 0,
    shadow_caught integer DEFAULT 0,
    chests_legend integer DEFAULT 0,
    chests_mythic integer DEFAULT 0,
    chests_rare integer DEFAULT 0,
    chests_common integer DEFAULT 0,
    redeems_used integer DEFAULT 0,
    u_id bigint NOT NULL,
    missions integer DEFAULT 0,
    votes integer DEFAULT 0,
    donation_amount integer DEFAULT 0,
    pokemon_normal integer DEFAULT 0,
    pokemon_fire integer DEFAULT 0,
    pokemon_water integer DEFAULT 0,
    pokemon_grass integer DEFAULT 0,
    pokemon_electric integer DEFAULT 0,
    pokemon_ice integer DEFAULT 0,
    pokemon_fighting integer DEFAULT 0,
    pokemon_poison integer DEFAULT 0,
    pokemon_ground integer DEFAULT 0,
    pokemon_flying integer DEFAULT 0,
    pokemon_psychic integer DEFAULT 0,
    pokemon_bug integer DEFAULT 0,
    pokemon_rock integer DEFAULT 0,
    pokemon_ghost integer DEFAULT 0,
    pokemon_dark integer DEFAULT 0,
    pokemon_dragon integer DEFAULT 0,
    pokemon_steel integer DEFAULT 0,
    pokemon_fairy integer DEFAULT 0,
    unown_event integer DEFAULT 0,
    npc_duels integer DEFAULT 0,
    duels_total integer DEFAULT 0,
    pokemon_released integer DEFAULT 0,
    dex_complete boolean DEFAULT false,
    duel_inverse_wins integer DEFAULT 0,
    shiny_bred integer DEFAULT 0,
    shadow_bred integer DEFAULT 0,
    chests_voucher integer DEFAULT 0,
    market_purchased integer DEFAULT 0,
    gym_wins integer DEFAULT 0,
    easter_completed smallint NOT NULL DEFAULT 0,
    wombo_used integer NOT NULL DEFAULT 0,
    breed_titan integer DEFAULT 0,
    breed_quad integer DEFAULT 0,
    duel_party_loses integer DEFAULT 0,
    pokemon_released_ivtotal integer NOT NULL DEFAULT 0,
    duel_total_xp real NOT NULL DEFAULT 0,
    CONSTRAINT achievements_pkey PRIMARY KEY (u_id)
    );

CREATE TABLE IF NOT EXISTS public.ai_generations
(
    id serial NOT NULL,
    theme text COLLATE pg_catalog."default" NOT NULL,
    generated_by bigint,
    "time" timestamp without time zone,
    image_url text COLLATE pg_catalog."default",
    pokemon character varying COLLATE pg_catalog."default",
    ranked smallint DEFAULT 0,
    featured boolean DEFAULT false,
    CONSTRAINT ai_generations_pkey PRIMARY KEY (id, theme)
    );

COMMENT ON COLUMN public.ai_generations.theme
    IS 'linked to name col in ai_themes';

CREATE TABLE IF NOT EXISTS public.ai_themes
(
    id serial NOT NULL,
    creator bigint,
    featured boolean DEFAULT false,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    used bigint DEFAULT 0,
    prompt text COLLATE pg_catalog."default",
    negative_prompt text COLLATE pg_catalog."default" DEFAULT ''::text,
    text_cfg smallint DEFAULT 18,
    weight real DEFAULT 0.55,
    steps integer DEFAULT 30,
    style integer DEFAULT 1,
    display_img text COLLATE pg_catalog."default",
    CONSTRAINT ai_themes_pkey PRIMARY KEY (id, name)
    );

CREATE TABLE IF NOT EXISTS public.announce
(
    id serial NOT NULL,
    announce text COLLATE pg_catalog."default",
    staff text COLLATE pg_catalog."default",
    "timestamp" integer,
    imp_level integer NOT NULL DEFAULT 1,
    title character varying COLLATE pg_catalog."default" NOT NULL DEFAULT 'Bot Announcement'::character varying,
    CONSTRAINT announce_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.artists
(
    artist character varying COLLATE pg_catalog."default",
    pokemon character varying COLLATE pg_catalog."default",
    link character varying COLLATE pg_catalog."default",
    id serial NOT NULL,
    in_use boolean NOT NULL DEFAULT false,
    CONSTRAINT artists_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.artists_consent
(
    artist character varying COLLATE pg_catalog."default" NOT NULL,
    deviantart character varying COLLATE pg_catalog."default",
    instagram character varying COLLATE pg_catalog."default",
    twitter character varying COLLATE pg_catalog."default",
    discord character varying COLLATE pg_catalog."default",
    other_links character varying[] COLLATE pg_catalog."default",
    date timestamp with time zone,
    comment character varying COLLATE pg_catalog."default",
    info character varying COLLATE pg_catalog."default",
    id serial NOT NULL,
    contact character varying COLLATE pg_catalog."default",
    extra character varying COLLATE pg_catalog."default",
    in_use boolean DEFAULT false,
    CONSTRAINT artists_consent_pkey PRIMARY KEY (artist)
    );

CREATE TABLE IF NOT EXISTS public.botbans
(
    users bigint[] NOT NULL,
    duelbans bigint[] NOT NULL
);

CREATE TABLE IF NOT EXISTS public.cal
(
    id serial NOT NULL,
    week integer,
    monday integer,
    tuesday integer,
    wednesday integer,
    thursday integer,
    friday integer,
    saturday integer,
    sunday integer,
    CONSTRAINT cal_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.cheststore
(
    u_id bigint NOT NULL,
    rare integer NOT NULL DEFAULT 0,
    mythic integer NOT NULL DEFAULT 0,
    legend integer NOT NULL DEFAULT 0,
    restock text COLLATE pg_catalog."default" NOT NULL DEFAULT '0'::text,
    CONSTRAINT cheststore_pkey PRIMARY KEY (u_id)
    );

CREATE TABLE IF NOT EXISTS public.community
(
    credits bigint DEFAULT 0,
    redeems bigint DEFAULT 0,
    pokes bigint[] DEFAULT ARRAY[]::bigint[],
    items bigint[] DEFAULT ARRAY[]::bigint[],
    other text COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.current_event
(
    u_id bigint NOT NULL,
    event_ranking integer NOT NULL,
    event_title text COLLATE pg_catalog."default" NOT NULL,
    event_xp integer NOT NULL DEFAULT 0,
    max_event_xp integer NOT NULL DEFAULT 100,
    event_level integer NOT NULL DEFAULT 1,
    rank text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT current_event_pkey PRIMARY KEY (u_id)
    );

CREATE TABLE IF NOT EXISTS public.dead_pokes
(
    id integer NOT NULL DEFAULT nextval('pokes_id_seq'::regclass),
    pokname text COLLATE pg_catalog."default" NOT NULL,
    hpiv integer NOT NULL,
    atkiv integer NOT NULL,
    defiv integer NOT NULL,
    spatkiv integer NOT NULL,
    spdefiv integer NOT NULL,
    speediv integer NOT NULL,
    hpev integer NOT NULL,
    atkev integer NOT NULL,
    defev integer NOT NULL,
    spatkev integer NOT NULL,
    spdefev integer NOT NULL,
    speedev integer NOT NULL,
    pokelevel integer NOT NULL,
    moves text[] COLLATE pg_catalog."default" NOT NULL,
    hitem text COLLATE pg_catalog."default" NOT NULL,
    exp integer NOT NULL,
    nature text COLLATE pg_catalog."default" NOT NULL,
    expcap integer NOT NULL,
    poknick text COLLATE pg_catalog."default" NOT NULL,
    price integer NOT NULL DEFAULT 0,
    market_enlist boolean NOT NULL DEFAULT false,
    happiness integer NOT NULL DEFAULT 0,
    fav boolean NOT NULL,
    ability_index integer NOT NULL,
    gender text COLLATE pg_catalog."default" NOT NULL,
    shiny boolean DEFAULT false,
    counter integer DEFAULT 0,
    name text COLLATE pg_catalog."default" DEFAULT ''::text,
    time_stamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    caught_by bigint,
    radiant boolean DEFAULT false,
    tags text[] COLLATE pg_catalog."default" NOT NULL DEFAULT ARRAY[]::text[],
    skin text COLLATE pg_catalog."default",
    tradable boolean NOT NULL DEFAULT true,
    breedable boolean NOT NULL DEFAULT true,
    champion boolean NOT NULL DEFAULT false,
    temp boolean NOT NULL DEFAULT false,
    voucher boolean DEFAULT false,
    owner bigint,
    owned boolean DEFAULT false,
    CONSTRAINT pokes_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.dead_radiants
(
    pokemon text COLLATE pg_catalog."default" NOT NULL,
    dead integer,
    id serial NOT NULL,
    types integer[],
    CONSTRAINT dead_radiants_pkey PRIMARY KEY (pokemon),
    CONSTRAINT dead_radiants_id_key UNIQUE (id)
    );

CREATE TABLE IF NOT EXISTS public.disabled_channels
(
    channel bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.ditto_donations
(
    u_id bigint,
    amount integer,
    txn_id text COLLATE pg_catalog."default",
    date_donated date
);

CREATE TABLE IF NOT EXISTS public.dittobitties
(
    id serial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    rarity character varying(20) COLLATE pg_catalog."default" NOT NULL,
    special boolean NOT NULL DEFAULT false,
    url_1 text COLLATE pg_catalog."default" NOT NULL,
    url_2 text COLLATE pg_catalog."default" NOT NULL,
    url_3 text COLLATE pg_catalog."default" NOT NULL,
    url_4 text COLLATE pg_catalog."default" NOT NULL,
    url_5 text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT dittobitties_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.donations
(
    u_id bigint NOT NULL,
    amount integer NOT NULL,
    txn_id text COLLATE pg_catalog."default" NOT NULL,
    date_donated date DEFAULT CURRENT_DATE
);

CREATE TABLE IF NOT EXISTS public.egg_hatchery
(
    u_id bigint NOT NULL,
    "1" integer,
    "2" integer,
    "3" integer,
    "4" integer,
    "5" integer,
    "6" integer,
    "7" integer,
    "8" integer,
    "9" integer,
    "10" integer,
    eggs integer[],
    id serial NOT NULL,
    "group" smallint,
    CONSTRAINT egg_hatchery_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.eggs
(
    u_id bigint NOT NULL,
    bidoof integer NOT NULL DEFAULT 0,
    caterpie integer NOT NULL DEFAULT 0,
    pidgey integer NOT NULL DEFAULT 0,
    magikarp integer NOT NULL DEFAULT 0,
    spinarak integer NOT NULL DEFAULT 0,
    tentacruel integer NOT NULL DEFAULT 0,
    togepi integer NOT NULL DEFAULT 0,
    bellsprout integer NOT NULL DEFAULT 0,
    chansey integer NOT NULL DEFAULT 0,
    omastar integer NOT NULL DEFAULT 0,
    cubone integer NOT NULL DEFAULT 0,
    farfetchd integer NOT NULL DEFAULT 0,
    porygon integer NOT NULL DEFAULT 0,
    ralts integer NOT NULL DEFAULT 0,
    dratini integer NOT NULL DEFAULT 0,
    larvitar integer NOT NULL DEFAULT 0,
    bagon integer NOT NULL DEFAULT 0,
    gible integer NOT NULL DEFAULT 0,
    kyogre integer NOT NULL DEFAULT 0,
    dialga integer NOT NULL DEFAULT 0,
    got_radiant boolean NOT NULL DEFAULT false,
    CONSTRAINT eggs_pkey PRIMARY KEY (u_id)
    );

CREATE TABLE IF NOT EXISTS public.gifts
(
    gift_id bigserial NOT NULL,
    current_owner_id bigint NOT NULL,
    previous_owner_id bigint,
    status character varying(50) COLLATE pg_catalog."default" NOT NULL,
    transformation_level integer DEFAULT 0,
    is_locked boolean DEFAULT false,
    lock_expiration timestamp without time zone,
    gift_history bigint[],
    creation_timestamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    gift_history_with_time jsonb DEFAULT '[]'::jsonb,
    CONSTRAINT gifts_pkey PRIMARY KEY (gift_id)
    );

CREATE TABLE IF NOT EXISTS public.gym_log
(
    id bigserial NOT NULL,
    gym character varying COLLATE pg_catalog."default" NOT NULL,
    "time" timestamp without time zone NOT NULL DEFAULT now(),
    challenger bigint NOT NULL,
    leader bigint NOT NULL,
    win boolean NOT NULL,
    CONSTRAINT gym_log_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.gyms
(
    u_id bigint NOT NULL,
    theblazingbowl boolean DEFAULT false,
    theunderwaterarena boolean DEFAULT false,
    fieldofflowers boolean DEFAULT false,
    prismpalace boolean DEFAULT false,
    thebasicbungalow boolean DEFAULT false,
    starterstation boolean DEFAULT false,
    floatingisland boolean DEFAULT false,
    stablessstadium boolean DEFAULT false,
    triangulartower boolean DEFAULT false,
    monotypemarket boolean DEFAULT false,
    generationalgallery boolean DEFAULT false,
    bansaucearena boolean DEFAULT false,
    physicalfortress boolean DEFAULT false,
    specialshack boolean DEFAULT false,
    reversedimension boolean DEFAULT false,
    theblazingbowl_ts bigint DEFAULT 0,
    theunderwaterarena_ts bigint DEFAULT 0,
    fieldofflowers_ts bigint DEFAULT 0,
    prismpalace_ts bigint DEFAULT 0,
    thebasicbungalow_ts bigint DEFAULT 0,
    starterstation_ts bigint DEFAULT 0,
    floatingisland_ts bigint DEFAULT 0,
    stablessstadium_ts bigint DEFAULT 0,
    triangulartower_ts bigint DEFAULT 0,
    monotypemarket_ts bigint DEFAULT 0,
    generationalgallery_ts bigint DEFAULT 0,
    bansaucearena_ts bigint DEFAULT 0,
    physicalfortress_ts bigint DEFAULT 0,
    specialshack_ts bigint DEFAULT 0,
    reversedimension_ts bigint DEFAULT 0,
    elite4 boolean DEFAULT false,
    elite4_ts bigint DEFAULT 0,
    cooldown bigint DEFAULT 0,
    CONSTRAINT gyms_pkey PRIMARY KEY (u_id)
    );

CREATE TABLE IF NOT EXISTS public.halloween
(
    u_id bigint NOT NULL,
    candy integer NOT NULL DEFAULT 0,
    bone integer NOT NULL DEFAULT 0,
    pumpkin integer NOT NULL DEFAULT 0,
    raffle integer NOT NULL DEFAULT 0,
    username text COLLATE pg_catalog."default",
    CONSTRAINT halloween_pkey PRIMARY KEY (u_id)
    );

CREATE TABLE IF NOT EXISTS public.hatchery_pokemon
(
    "array" integer[]
);

CREATE TABLE IF NOT EXISTS public.honey
(
    channel bigint NOT NULL,
    owner bigint NOT NULL,
    id serial NOT NULL,
    type character varying COLLATE pg_catalog."default",
    expires integer NOT NULL DEFAULT 0,
    CONSTRAINT honey_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.leveling_data
(
    xp integer,
    level integer,
    title text COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.market
(
    id bigserial NOT NULL,
    poke integer NOT NULL,
    owner bigint NOT NULL,
    price integer NOT NULL,
    buyer bigint,
    CONSTRAINT market_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.messages
(
    message_id serial NOT NULL,
    author_id bigint NOT NULL,
    content text COLLATE pg_catalog."default" NOT NULL,
    "timestamp" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    is_system_message boolean DEFAULT false,
    is_read boolean DEFAULT false,
    title text COLLATE pg_catalog."default",
    inbox bigint,
    CONSTRAINT messages_pkey PRIMARY KEY (message_id)
    );

CREATE TABLE IF NOT EXISTS public.mothers
(
    pokemon_id bigint NOT NULL,
    owner bigint,
    entry_time timestamp without time zone DEFAULT now()
    );

CREATE TABLE IF NOT EXISTS public.new_users
(
    u_id bigint NOT NULL,
    completed boolean DEFAULT false,
    task1 jsonb DEFAULT '{"bag": false, "bal": false, "hunt": false, "region": false, "trainernick": false}'::jsonb,
    task2 jsonb DEFAULT '{"info": false, "vote": false, "invite": false, "updates": false, "leaderboard": false}'::jsonb,
    task3 jsonb DEFAULT '{"server": false, "spawns": false, "silence": false, "redirect": false, "botcommands": false}'::jsonb,
    task4 jsonb DEFAULT '{"/f": false, "/p": false, "/fav": {"add": false, "list": false, "remove": false}, "/tags": {"add": false, "list": false, "remove": false}, "/order": {"evs": false, "ivs": false, "name": false, "level": false, "default": false}, "/party": {"add": false, "list": false, "load": false, "view": false, "setup": false, "remove": false, "register": false, "deregister": false}, "/select": false, "/pokedex": false}'::jsonb,
    task5 jsonb DEFAULT '{"/duel": {"npc": false, "party": false, "single": false, "inverse": false}, "/fish": false, "/breed": false, "/missions": false}'::jsonb,
    task6 jsonb DEFAULT '{"/m": {"market_add": false, "market_buy": false, "market_info": false, "market_remove": false}, "/buy": {"item": false, "candy": false, "chest": false, "daycare": false, "redeems": false, "vitamins": false}, "/gift": {"credits": false, "pokemon": false, "redeems": false}, "/sell": {"egg": false, "item": false}, "/shop": false, "/trade": false}'::jsonb,
    alltasks boolean DEFAULT false,
    opt_out boolean DEFAULT false,
    CONSTRAINT new_users_pkey PRIMARY KEY (u_id)
    );

CREATE TABLE IF NOT EXISTS public.p_stats
(
    pokemon character varying(255) COLLATE pg_catalog."default" NOT NULL,
    wins integer,
    faints integer,
    CONSTRAINT p_stats_pkey PRIMARY KEY (pokemon)
    );

CREATE TABLE IF NOT EXISTS public.partys
(
    slot1 bigint,
    slot2 bigint,
    slot3 bigint,
    slot4 bigint,
    slot5 bigint,
    slot6 bigint,
    p_id serial NOT NULL,
    u_id bigint NOT NULL,
    name text COLLATE pg_catalog."default",
    quick boolean NOT NULL DEFAULT false,
    CONSTRAINT partys_pkey PRIMARY KEY (p_id)
    );

CREATE TABLE IF NOT EXISTS public.patreon_store
(
    u_id bigint NOT NULL,
    reset bigint NOT NULL,
    CONSTRAINT patreon_store_pkey PRIMARY KEY (u_id)
    );

CREATE TABLE IF NOT EXISTS public.patreonstore
(
    lastdate text COLLATE pg_catalog."default" NOT NULL,
    u_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.pokes
(
    id serial NOT NULL,
    pokname text COLLATE pg_catalog."default" NOT NULL,
    hpiv integer NOT NULL,
    atkiv integer NOT NULL,
    defiv integer NOT NULL,
    spatkiv integer NOT NULL,
    spdefiv integer NOT NULL,
    speediv integer NOT NULL,
    hpev integer NOT NULL,
    atkev integer NOT NULL,
    defev integer NOT NULL,
    spatkev integer NOT NULL,
    spdefev integer NOT NULL,
    speedev integer NOT NULL,
    pokelevel integer NOT NULL,
    moves text[] COLLATE pg_catalog."default" NOT NULL,
    hitem text COLLATE pg_catalog."default" NOT NULL,
    exp integer NOT NULL,
    nature text COLLATE pg_catalog."default" NOT NULL,
    expcap integer NOT NULL,
    poknick text COLLATE pg_catalog."default" NOT NULL,
    price integer NOT NULL DEFAULT 0,
    market_enlist boolean NOT NULL DEFAULT false,
    happiness integer NOT NULL DEFAULT 0,
    fav boolean NOT NULL,
    ability_index integer NOT NULL,
    gender text COLLATE pg_catalog."default" NOT NULL,
    shiny boolean DEFAULT false,
    counter integer DEFAULT 0,
    name text COLLATE pg_catalog."default" DEFAULT ''::text,
    time_stamp timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    caught_by bigint,
    radiant boolean DEFAULT false,
    tags text[] COLLATE pg_catalog."default" NOT NULL DEFAULT ARRAY[]::text[],
    skin text COLLATE pg_catalog."default",
    tradable boolean NOT NULL DEFAULT true,
    breedable boolean NOT NULL DEFAULT true,
    champion boolean NOT NULL DEFAULT false,
    temp boolean NOT NULL DEFAULT false,
    voucher boolean DEFAULT false,
    owner bigint,
    owned boolean DEFAULT false,
    ditto_id serial NOT NULL,
    CONSTRAINT new3_pokes_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.redeemstore
(
    u_id bigint NOT NULL,
    bought integer NOT NULL DEFAULT 0,
    restock text COLLATE pg_catalog."default" NOT NULL DEFAULT '0'::text,
    CONSTRAINT redeemstore_pkey PRIMARY KEY (u_id)
    );

CREATE TABLE IF NOT EXISTS public.servers
(
    serverid bigint NOT NULL,
    prefix text COLLATE pg_catalog."default" NOT NULL DEFAULT ';'::text,
    language character varying(2) COLLATE pg_catalog."default",
    redirects bigint[],
    delspawns boolean DEFAULT false,
    pinspawns boolean DEFAULT false,
    disabled_channels bigint[] DEFAULT '{}'::bigint[],
    spawns_disabled bigint[] DEFAULT '{}'::bigint[]
    );

CREATE TABLE IF NOT EXISTS public.skylog
(
    id serial NOT NULL,
    u_id bigint NOT NULL,
    command text COLLATE pg_catalog."default" NOT NULL,
    args text COLLATE pg_catalog."default" NOT NULL,
    jump text COLLATE pg_catalog."default",
    "time" timestamp without time zone NOT NULL,
    note character varying COLLATE pg_catalog."default",
    CONSTRAINT skylog_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.tokens
(
    token character varying COLLATE pg_catalog."default" NOT NULL,
    u_id character varying COLLATE pg_catalog."default" NOT NULL,
    username character varying COLLATE pg_catalog."default" NOT NULL,
    discriminator character varying COLLATE pg_catalog."default",
    avatar character varying COLLATE pg_catalog."default",
    refresh_token character varying COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.tourny_teams
(
    id serial NOT NULL,
    team character varying[] COLLATE pg_catalog."default" NOT NULL DEFAULT '{}'::character varying[],
    u_id bigint NOT NULL,
    staff bigint NOT NULL,
    team_ids integer[],
    CONSTRAINT tourny_teams_pkey PRIMARY KEY (u_id)
    );

CREATE TABLE IF NOT EXISTS public.trade_logs
(
    sender_pokes bigint[] DEFAULT ARRAY[]::bigint[],
    sender_credits bigint DEFAULT 0,
    sender bigint NOT NULL,
    receiver_pokes bigint[] DEFAULT ARRAY[]::bigint[],
    receiver_credits bigint DEFAULT 0,
    receiver bigint NOT NULL,
    command text COLLATE pg_catalog."default" NOT NULL,
    t_id serial NOT NULL,
    "time" timestamp with time zone,
    sender_redeems bigint NOT NULL DEFAULT 0,
    receiver_redeems bigint NOT NULL DEFAULT 0,
    CONSTRAINT trade_logs_pkey PRIMARY KEY (t_id)
    );

COMMENT ON TABLE public.trade_logs
    IS 'trade logs for mewbot';

CREATE TABLE IF NOT EXISTS public.updates
(
    id serial NOT NULL,
    update text COLLATE pg_catalog."default" NOT NULL,
    update_date date NOT NULL DEFAULT CURRENT_DATE,
    dev text COLLATE pg_catalog."default",
    CONSTRAINT updates_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.user_dittobitties
(
    id serial NOT NULL,
    user_id bigint NOT NULL,
    dbitty_id integer NOT NULL,
    str integer NOT NULL,
    "int" integer NOT NULL,
    pdef integer NOT NULL,
    mdef integer NOT NULL,
    agi integer NOT NULL,
    con integer NOT NULL,
    experience integer NOT NULL DEFAULT 0,
    stage smallint NOT NULL DEFAULT 1,
    current_hp integer NOT NULL DEFAULT 10,
    CONSTRAINT user_dittobitties_pkey PRIMARY KEY (id)
    );

CREATE TABLE IF NOT EXISTS public.users
(
    u_id bigint,
    redeems integer,
    evpoints integer,
    tnick text COLLATE pg_catalog."default",
    upvotepoints integer,
    mewcoins bigint,
    user_order text COLLATE pg_catalog."default" DEFAULT 'kek'::character varying,
    pokes integer[],
    inventory jsonb DEFAULT '{}'::jsonb,
    items jsonb DEFAULT '{}'::jsonb,
    daycare integer,
    daycarelimit integer DEFAULT 1,
    energy integer DEFAULT 10,
    held_item text COLLATE pg_catalog."default" DEFAULT 'None'::text,
    fishing_exp bigint DEFAULT 0,
    fishing_level integer DEFAULT 1,
    energy_hour integer,
    fishing_level_cap bigint DEFAULT 50,
    party integer[] DEFAULT '{0,0,0,0,0,0}'::bigint[],
    luck integer DEFAULT 1,
    npc_relationships jsonb DEFAULT '{}'::jsonb,
    selected integer,
    visible boolean DEFAULT true,
    silenced boolean NOT NULL DEFAULT false,
    tradelock boolean DEFAULT false,
    voted boolean DEFAULT false,
    id serial NOT NULL,
    restored boolean DEFAULT false,
    bike boolean DEFAULT false,
    botbanned boolean DEFAULT false,
    marketlimit integer NOT NULL DEFAULT 3,
    staff text COLLATE pg_catalog."default" NOT NULL DEFAULT 'User'::text,
    gym_leader boolean DEFAULT false,
    oxiconverted boolean NOT NULL DEFAULT false,
    event integer DEFAULT 0,
    last_vote integer NOT NULL DEFAULT 0,
    vote_streak integer NOT NULL DEFAULT 0,
    skins jsonb NOT NULL DEFAULT '{}'::jsonb,
    holidayinv jsonb DEFAULT '{}'::jsonb,
    raffle integer DEFAULT 0,
    region text COLLATE pg_catalog."default" NOT NULL DEFAULT 'original'::text,
    hunt text COLLATE pg_catalog."default" DEFAULT ''::text,
    chain integer NOT NULL DEFAULT 0,
    patreon_override character varying COLLATE pg_catalog."default",
    note character varying COLLATE pg_catalog."default",
    skin_tokens integer NOT NULL DEFAULT 0,
    comp boolean DEFAULT false,
    show_donations boolean DEFAULT false,
    mystery_token integer DEFAULT 0,
    event_skin_tokens integer DEFAULT 0,
    os_rep integer NOT NULL DEFAULT 0,
    vip_tokens integer NOT NULL DEFAULT 0,
    active boolean NOT NULL DEFAULT false,
    titles text[] COLLATE pg_catalog."default" DEFAULT ARRAY['Newcomer'::text],
    slime integer DEFAULT 0,
    level integer DEFAULT 1,
    current_xp integer DEFAULT 0,
    crystal_slime integer DEFAULT 0,
    females integer[] DEFAULT ARRAY[NULL::integer, NULL::integer, NULL::integer, NULL::integer, NULL::integer, NULL::integer, NULL::integer, NULL::integer, NULL::integer, NULL::integer],
    ancient_unlocked boolean DEFAULT false,
    selected_title text COLLATE pg_catalog."default" DEFAULT ''::text,
    start_progress jsonb NOT NULL DEFAULT '{"Tutorial Mission": {"Stage1": false, "Stage2": false, "Stage3": false, "Stage4": false}}'::jsonb,
    voucher integer DEFAULT 0,
    alt bigint[],
    type_tokens integer[] DEFAULT ARRAY[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    tokens jsonb DEFAULT '{"Bug": 0, "Ice": 0, "Dark": 0, "Fire": 0, "Rock": 0, "Fairy": 0, "Ghost": 0, "Grass": 0, "Steel": 0, "Water": 0, "Dragon": 0, "Flying": 0, "Ground": 0, "Normal": 0, "Poison": 0, "Psychic": 0, "Electric": 0, "Fighting": 0}'::jsonb,
    patreon text COLLATE pg_catalog."default" DEFAULT 'None'::text,
    CONSTRAINT u_id_check UNIQUE (u_id),
    CONSTRAINT username UNIQUE (tnick)
    );

CREATE TABLE IF NOT EXISTS public.users_active
(
    u_id bigint,
    redeems integer,
    evpoints integer,
    tnick text COLLATE pg_catalog."default",
    upvotepoints integer,
    mewcoins bigint,
    user_order text COLLATE pg_catalog."default",
    pokes integer[],
    inventory jsonb,
    items jsonb,
    daycare integer,
    daycarelimit integer,
    energy integer,
    held_item text COLLATE pg_catalog."default",
    fishing_exp bigint,
    fishing_level integer,
    energy_hour integer,
    fishing_level_cap bigint,
    party integer[],
    luck integer,
    npc_relationships jsonb,
    selected integer,
    visible boolean,
    silenced boolean,
    tradelock boolean,
    voted boolean,
    id integer,
    restored boolean,
    bike boolean,
    botbanned boolean,
    marketlimit integer,
    staff text COLLATE pg_catalog."default",
    gym_leader boolean,
    oxiconverted boolean,
    event integer,
    last_vote integer,
    vote_streak integer,
    skins jsonb,
    holidayinv jsonb,
    raffle integer,
    region text COLLATE pg_catalog."default",
    hunt text COLLATE pg_catalog."default",
    chain integer,
    patreon_override character varying COLLATE pg_catalog."default",
    note character varying COLLATE pg_catalog."default",
    skin_tokens integer,
    comp boolean,
    show_donations boolean,
    mystery_token integer,
    event_skin_tokens integer,
    os_rep integer,
    wombo_ticket integer,
    active boolean
);

CREATE TABLE IF NOT EXISTS public.users_inactive
(
    u_id bigint,
    redeems integer,
    evpoints integer,
    tnick text COLLATE pg_catalog."default",
    upvotepoints integer,
    mewcoins bigint,
    user_order text COLLATE pg_catalog."default",
    pokes integer[],
    inventory jsonb,
    items jsonb,
    daycare integer,
    daycarelimit integer,
    energy integer,
    held_item text COLLATE pg_catalog."default",
    fishing_exp bigint,
    fishing_level integer,
    energy_hour integer,
    fishing_level_cap bigint,
    party integer[],
    luck integer,
    npc_relationships jsonb,
    selected integer,
    visible boolean,
    silenced boolean,
    tradelock boolean,
    voted boolean,
    id integer,
    restored boolean,
    bike boolean,
    botbanned boolean,
    marketlimit integer,
    staff text COLLATE pg_catalog."default",
    gym_leader boolean,
    oxiconverted boolean,
    event integer,
    last_vote integer,
    vote_streak integer,
    skins jsonb,
    holidayinv jsonb,
    raffle integer,
    region text COLLATE pg_catalog."default",
    hunt text COLLATE pg_catalog."default",
    chain integer,
    patreon_override character varying COLLATE pg_catalog."default",
    note character varying COLLATE pg_catalog."default",
    skin_tokens integer,
    comp boolean,
    show_donations boolean,
    mystery_token integer,
    event_skin_tokens integer,
    os_rep integer,
    wombo_ticket integer,
    active boolean
);

CREATE TABLE IF NOT EXISTS public.voucher_requests
(
    m_id bigint NOT NULL,
    u_id bigint NOT NULL,
    status text[] COLLATE pg_catalog."default",
    artist bigint,
    CONSTRAINT voucher_requests_pkey PRIMARY KEY (m_id)
    );

-- Add foreign key constraints only if they don't already exist
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name = 'cheststore_u_id_fkey' 
        AND table_name = 'cheststore'
    ) THEN
        ALTER TABLE public.cheststore
            ADD CONSTRAINT cheststore_u_id_fkey FOREIGN KEY (u_id)
            REFERENCES public.users (u_id) MATCH SIMPLE
            ON UPDATE NO ACTION
            ON DELETE CASCADE;
    END IF;
END $$;

CREATE INDEX IF NOT EXISTS cheststore_pkey ON public.cheststore(u_id);

-- Add egg_hatchery foreign key constraints
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_egg_hatchery_1' AND table_name = 'egg_hatchery') THEN
        ALTER TABLE public.egg_hatchery ADD CONSTRAINT fk_egg_hatchery_1 FOREIGN KEY ("1") REFERENCES public.pokes (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_egg_hatchery_2' AND table_name = 'egg_hatchery') THEN
        ALTER TABLE public.egg_hatchery ADD CONSTRAINT fk_egg_hatchery_2 FOREIGN KEY ("2") REFERENCES public.pokes (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_egg_hatchery_3' AND table_name = 'egg_hatchery') THEN
        ALTER TABLE public.egg_hatchery ADD CONSTRAINT fk_egg_hatchery_3 FOREIGN KEY ("3") REFERENCES public.pokes (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_egg_hatchery_4' AND table_name = 'egg_hatchery') THEN
        ALTER TABLE public.egg_hatchery ADD CONSTRAINT fk_egg_hatchery_4 FOREIGN KEY ("4") REFERENCES public.pokes (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_egg_hatchery_5' AND table_name = 'egg_hatchery') THEN
        ALTER TABLE public.egg_hatchery ADD CONSTRAINT fk_egg_hatchery_5 FOREIGN KEY ("5") REFERENCES public.pokes (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_egg_hatchery_6' AND table_name = 'egg_hatchery') THEN
        ALTER TABLE public.egg_hatchery ADD CONSTRAINT fk_egg_hatchery_6 FOREIGN KEY ("6") REFERENCES public.pokes (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_egg_hatchery_7' AND table_name = 'egg_hatchery') THEN
        ALTER TABLE public.egg_hatchery ADD CONSTRAINT fk_egg_hatchery_7 FOREIGN KEY ("7") REFERENCES public.pokes (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_egg_hatchery_8' AND table_name = 'egg_hatchery') THEN
        ALTER TABLE public.egg_hatchery ADD CONSTRAINT fk_egg_hatchery_8 FOREIGN KEY ("8") REFERENCES public.pokes (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_egg_hatchery_9' AND table_name = 'egg_hatchery') THEN
        ALTER TABLE public.egg_hatchery ADD CONSTRAINT fk_egg_hatchery_9 FOREIGN KEY ("9") REFERENCES public.pokes (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_egg_hatchery_10' AND table_name = 'egg_hatchery') THEN
        ALTER TABLE public.egg_hatchery ADD CONSTRAINT fk_egg_hatchery_10 FOREIGN KEY ("10") REFERENCES public.pokes (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_users' AND table_name = 'egg_hatchery') THEN
        ALTER TABLE public.egg_hatchery ADD CONSTRAINT fk_users FOREIGN KEY (u_id) REFERENCES public.users (u_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE;
    END IF;
END $$;

CREATE INDEX IF NOT EXISTS index_u_id ON public.egg_hatchery(u_id);

-- Add redeemstore foreign key constraint
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name = 'redeemstore_u_id_fkey' 
        AND table_name = 'redeemstore'
    ) THEN
        ALTER TABLE public.redeemstore
            ADD CONSTRAINT redeemstore_u_id_fkey FOREIGN KEY (u_id)
            REFERENCES public.users (u_id) MATCH SIMPLE
            ON UPDATE NO ACTION
            ON DELETE CASCADE;
    END IF;
END $$;

CREATE INDEX IF NOT EXISTS redeemstore_pkey ON public.redeemstore(u_id);

-- Add user_dittobitties foreign key constraint
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name = 'user_dittobitties_dbitty_id_fkey' 
        AND table_name = 'user_dittobitties'
    ) THEN
        ALTER TABLE public.user_dittobitties
            ADD CONSTRAINT user_dittobitties_dbitty_id_fkey FOREIGN KEY (dbitty_id)
            REFERENCES public.dittobitties (id) MATCH SIMPLE
            ON UPDATE NO ACTION
            ON DELETE NO ACTION;
    END IF;
END $$;

END;